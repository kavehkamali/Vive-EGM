#ifndef ROBOT_EGM_H
#define ROBOT_EGM_H

/////////////////////////////////////////////////////////////////////////
// Sample using Google protocol buffers C++
//

#include <WinSock2.h>
#include <iostream>
#include <fstream>

#include "egm.pb.h" // generated by Google protoc.exe

#pragma comment(lib, "Ws2_32.lib")      // socket lib
#pragma comment(lib, "libprotobuf.lib") // protobuf lib

static int portNumber = 6510;
static unsigned int sequenceNumber = 0;

using namespace std;
using namespace abb::egm;

struct OFFSET
{
    double x=0;
    double y=0;
    double z=0;
    double q1=1;
    double q2=0;
    double q3=0;
    double q4=0;
};
struct JOINTS
{
    double j1=0;
    double j2=0;
    double j3=0;
    double j4=0;
    double j5=0;
    double j6=0;

};

class Robot_EGM {
public:
    Robot_EGM();
    bool loop();
    void setOffset(struct OFFSET (offset));
    void getJoints(struct JOINTS (& joints));
    void getSeqno(int &n);
    bool connect();

private:
    void CreateSensorMessage(EgmSensor* pSensorMessage);
    int DisplayRobotMessage(EgmRobot *pRobotMessage);
    SOCKET sockfd;
    int n;
    struct sockaddr_in serverAddr, clientAddr;
    int len;
    char protoMessage[1400];
    /* Init winsock */
    WSADATA wsaData;
    double offset_x=0;
    double offset_y=0;
    double offset_z=0;
    double q1=0;
    double q2=0;
    double q3=0;
    double q4=0;
    int connection_seqno;
    EgmFeedBack robot_feedback;
    EgmJoints egmjoints;
};

#endif // ROBOT_EGM_H
